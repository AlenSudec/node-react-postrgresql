{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alens\\\\OneDrive\\\\Radna povr\\u0161ina\\\\Novi materijali\\\\diplomski react node sql\\\\client\\\\src\\\\components\\\\UploadGraph\\\\Upload.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styles from './mystyle.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Upload = () => {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState();\n  const [isFilePicked, setIsFilePicked] = useState(false);\n  const [isFileSubmitted, setIsFileSubmitted] = useState(false);\n  const [selectedHeaders, setSelectedHeaders] = useState();\n  const [isHeaderPicked, setIsHeaderPicked] = useState(false);\n  const d = new Date();\n  let chosenVariables = [];\n  let typesGraphicons = ['Linijski grafikon', 'Histogram', 'Box plot', 'Scatter plot', 'Bar plot', 'Heat map'];\n  let chosenGraph = -1;\n\n  const changeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n    console.log(event.target.files[0]);\n    setIsFilePicked(true);\n  }; //uploading csv to server\n\n\n  const handleSubmission = () => {\n    console.log(\"handleUpload started\");\n    const data = new FormData();\n    data.append('file', selectedFile);\n    axios.post(\"http://localhost:3001/upload\", data, {}).then(res => {\n      console.log(res.statusText);\n    });\n    submit();\n    setIsFileSubmitted(true);\n  }; //getHeaders from selectedfile csv\n\n\n  const submit = () => {\n    const file = selectedFile;\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const text = e.target.result;\n      console.log(text);\n      processCsv(text);\n    };\n\n    reader.readAsText(file);\n  };\n\n  const processCsv = (str, delim = \",\") => {\n    setSelectedHeaders(str.slice(0, str.indexOf('\\r\\n')).split(delim));\n    setIsHeaderPicked(true);\n    console.log(selectedHeaders);\n  };\n\n  const saveChosenVariables = e => {\n    if (chosenVariables.indexOf(e) === -1) {\n      chosenVariables.push(e);\n      console.log(chosenVariables);\n    } else if (chosenVariables.indexOf(e) !== -1) {\n      chosenVariables.splice(chosenVariables.indexOf(e), 1);\n      console.log(chosenVariables);\n    }\n  }; //Date.now() + '-' + file.originalname\n  //putting csvfile name in database\n\n\n  const handleDatabase = () => {\n    console.log(\"handleDB started\");\n    let csvName = d.getDate() + '-' + (d.getMonth() + 1) + '-' + selectedFile.name;\n    axios.post(\"http://localhost:3001/list\", {\n      csvname: csvName,\n      graph: chosenGraph,\n      var1: chosenVariables[0],\n      var2: chosenVariables[1],\n      var3: chosenVariables[2],\n      var4: chosenVariables[3],\n      var5: chosenVariables[4]\n    }).then(res => {\n      console.log(res.statusText);\n    }); // fetch(\"http://localhost:3001/list\", {\n    // \tmethod: 'POST',\n    // \theaders: {\n    // \t\t'Content-Type' : 'application/json',\n    // \t},\n    // \tbody: JSON.stringify({csvName}),\n    // }).catch(error => {\n    // \tconsole.log(error);\n    // })\n    // .then(response => {\n    // \tconsole.log(response);\n    // \treturn response.text();\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      accept: \".csv\",\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 4\n    }, this), isFilePicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Filename: \", selectedFile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Filetype: \", selectedFile.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Size in bytes: \", selectedFile.size]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"lastModifiedDate:\", ' ', selectedFile.lastModifiedDate.toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a file to show details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmission,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 4\n    }, this), isFileSubmitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Variables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 6\n        }, this), isHeaderPicked ? selectedHeaders.map((e, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            saveChosenVariables(e);\n          },\n          children: e\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 14\n        }, this), console.log(chosenVariables)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Graphicons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 5\n        }, this), typesGraphicons.map((e, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            chosenGraph = e;\n            console.log(chosenGraph);\n          },\n          children: e\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 6\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => {\n            handleDatabase();\n          },\n          children: \"Napravi grafikon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Upload, \"M8NOVowd7LdUHmePEKY77H/oVZs=\");\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["C:/Users/alens/OneDrive/Radna povr≈°ina/Novi materijali/diplomski react node sql/client/src/components/UploadGraph/Upload.jsx"],"names":["React","useState","axios","styles","Upload","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","isFileSubmitted","setIsFileSubmitted","selectedHeaders","setSelectedHeaders","isHeaderPicked","setIsHeaderPicked","d","Date","chosenVariables","typesGraphicons","chosenGraph","changeHandler","event","target","files","console","log","handleSubmission","data","FormData","append","post","then","res","statusText","submit","file","reader","FileReader","onload","e","text","result","processCsv","readAsText","str","delim","slice","indexOf","split","saveChosenVariables","push","splice","handleDatabase","csvName","getDate","getMonth","name","csvname","graph","var1","var2","var3","var4","var5","type","size","lastModifiedDate","toLocaleDateString","map","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './mystyle.module.css'; \r\n\r\n\r\n\r\nconst Upload = () => {\r\n\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [isFilePicked, setIsFilePicked] = useState(false);\r\n\tconst [isFileSubmitted, setIsFileSubmitted] = useState(false);\r\n\tconst [selectedHeaders, setSelectedHeaders] = useState();\r\n\tconst [isHeaderPicked, setIsHeaderPicked] = useState(false);\r\n\tconst d = new Date();\r\n\tlet chosenVariables = [];\r\n\tlet typesGraphicons = ['Linijski grafikon', 'Histogram','Box plot','Scatter plot', 'Bar plot', 'Heat map'];\r\n\tlet chosenGraph = -1;\r\n\t\r\n\r\n\t\r\n   \r\n    const changeHandler = (event) => {\r\n\t\tsetSelectedFile(event.target.files[0]);\r\n\t\tconsole.log(event.target.files[0]);\r\n\t\tsetIsFilePicked(true);\r\n\t};\r\n    //uploading csv to server\r\n    const handleSubmission = () => {\r\n\t\tconsole.log(\"handleUpload started\");\r\n        const data = new FormData()\r\n        data.append('file', selectedFile)\r\n        axios.post(\"http://localhost:3001/upload\", data, {\r\n\r\n        })\r\n        .then(res => {\r\n            console.log(res.statusText);\r\n        })\r\n\t\t\r\n\t\tsubmit();\r\n\t\tsetIsFileSubmitted(true);\r\n\t};\r\n\t\r\n\r\n\r\n\r\n\t//getHeaders from selectedfile csv\r\n\tconst submit = () => {\r\n        const file = selectedFile;\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = function(e) {\r\n            const text = e.target.result;\r\n            console.log(text);\r\n\t\t\tprocessCsv(text);\r\n        }\r\n\r\n        reader.readAsText(file);\r\n    }\r\n\t\r\n\tconst processCsv = (str, delim=\",\") => {\r\n\t\tsetSelectedHeaders(  str.slice(0,str.indexOf('\\r\\n')).split(delim));\r\n\t\tsetIsHeaderPicked(true);\r\n\t\tconsole.log(selectedHeaders);\r\n\t\t\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\r\n\tconst saveChosenVariables = (e) => {\r\n\t\tif(chosenVariables.indexOf(e) === -1){\r\n\t\t\tchosenVariables.push(e);\r\n\t\t\tconsole.log(chosenVariables);\r\n\t\t}\r\n\t\telse if(chosenVariables.indexOf(e) !== -1){\r\n\t\t\tchosenVariables.splice(chosenVariables.indexOf(e),1);\r\n\t\t\tconsole.log(chosenVariables);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\t//Date.now() + '-' + file.originalname\r\n\t//putting csvfile name in database\r\n\tconst handleDatabase = ()=> {\r\n\t\tconsole.log(\"handleDB started\");\r\n\t\tlet csvName = d.getDate() + '-' + (d.getMonth()+1) + '-' + selectedFile.name;\r\n\t\t\r\n\t\taxios.post(\"http://localhost:3001/list\",{\r\n\t\t\tcsvname: csvName,\r\n\t\t\tgraph: chosenGraph,\r\n\t\t\tvar1: chosenVariables[0],\r\n\t\t\tvar2: chosenVariables[1],\r\n\t\t\tvar3: chosenVariables[2],\r\n\t\t\tvar4: chosenVariables[3],\r\n\t\t\tvar5: chosenVariables[4],\r\n\t\t})\r\n\t\t.then(res => {\r\n            console.log(res.statusText);\r\n        })\r\n\r\n\t\t\r\n\t\r\n\t\t// fetch(\"http://localhost:3001/list\", {\r\n\t\t// \tmethod: 'POST',\r\n\t\t// \theaders: {\r\n\t\t// \t\t'Content-Type' : 'application/json',\r\n\t\t// \t},\r\n\t\t// \tbody: JSON.stringify({csvName}),\r\n\t\t// }).catch(error => {\r\n\t\t// \tconsole.log(error);\r\n\t\t// })\r\n\t\t// .then(response => {\r\n\t\t// \tconsole.log(response);\r\n\t\t// \treturn response.text();\r\n\t\t// });\r\n\t\t\r\n\t};\r\n\r\n    return (\r\n        <div>\r\n\t\t\t<input type=\"file\" name=\"file\" accept=\".csv\" onChange={changeHandler} />\r\n\t\t\t{isFilePicked ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>Filename: {selectedFile.name}</p>\r\n\t\t\t\t\t<p>Filetype: {selectedFile.type}</p>\r\n\t\t\t\t\t<p>Size in bytes: {selectedFile.size}</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tlastModifiedDate:{' '}\r\n\t\t\t\t\t\t{selectedFile.lastModifiedDate.toLocaleDateString()}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<p>Select a file to show details</p>\r\n\t\t\t)}\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={ handleSubmission } >Submit</button>\r\n\t\t\t</div>\r\n\t\t\t{isFileSubmitted ? (\r\n\t\t\t\t<>\r\n\t\t\t\t<div> \r\n\t\t\t\t\t<label>Variables</label>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisHeaderPicked ? (\r\n\t\t\t\t\t\t\t\tselectedHeaders.map((e,i) => (\r\n\t\t\t\t\t\t\t\t\t\t<button key={i} type=\"button\" onClick={()=> {saveChosenVariables(e) }}>{e}</button>))\r\n\t\t\t\t\t\t\t) : ( <br/>) \r\n\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{console.log(chosenVariables)}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t<label>Graphicons</label>\r\n\t\t\t\t{typesGraphicons.map((e,i) => (\r\n\t\t\t\t\t<button key={i} type=\"button\" onClick={() => {chosenGraph = e; console.log(chosenGraph);}}>{e}</button>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type=\"submit\" onClick={()=>{handleDatabase()}}>Napravi grafikon</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t\t\r\n\t\t\t) : ( <br/>) }\r\n\t\t\t\r\n\t\t\t\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}