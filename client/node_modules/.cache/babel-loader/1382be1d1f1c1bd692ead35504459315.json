{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alens\\\\OneDrive\\\\Radna povr\\u0161ina\\\\Novi materijali\\\\diplomski react node sql\\\\client\\\\src\\\\components\\\\UploadGraph\\\\Upload.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button'; //stepper\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n})); //\"react-bootstrap\": \"^2.0.0-beta.4\",\n//logic\n\nconst Upload = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  function MyVerticallyCenteredModal(props) {\n    _s();\n\n    const classes = useStyles();\n    return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(Stepper, {\n            activeStep: activeStep,\n            alternativeLabel: true,\n            children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n              children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 13\n              }, this)\n            }, label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.instructions,\n                children: \"All steps completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleReset,\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 11\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.instructions,\n                children: getStepContent(activeStep)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  disabled: activeStep === 0,\n                  onClick: handleBack,\n                  className: classes.backButton,\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: handleNext,\n                  children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.onHide,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }, this);\n  } //end of steppper\n\n\n  _s(MyVerticallyCenteredModal, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n    return [useStyles];\n  });\n\n  const [modalShow, setModalShow] = useState(false);\n  const [selectedFile, setSelectedFile] = useState();\n  const [isFilePicked, setIsFilePicked] = useState(false);\n  const [isFileSubmitted, setIsFileSubmitted] = useState(false);\n  const [selectedHeaders, setSelectedHeaders] = useState();\n  const [isHeaderPicked, setIsHeaderPicked] = useState(false);\n  const d = new Date();\n  let chosenVariables = [];\n  let typesGraphicons = ['Linijski grafikon', 'Histogram', 'Box plot', 'Scatter plot', 'Bar plot', 'Heat map'];\n  let chosenGraph = -1;\n\n  const changeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n    console.log(event.target.files[0]);\n    setIsFilePicked(true);\n  }; //uploading csv to server\n\n\n  const handleSubmission = () => {\n    console.log(\"handleUpload started\");\n    const data = new FormData();\n    data.append('file', selectedFile);\n    axios.post(\"http://localhost:3001/upload\", data, {}).then(res => {\n      console.log(res.statusText);\n    });\n    submit();\n    setIsFileSubmitted(true);\n  }; //getHeaders from selectedfile csv\n\n\n  const submit = () => {\n    const file = selectedFile;\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const text = e.target.result;\n      console.log(text);\n      processCsv(text);\n    };\n\n    reader.readAsText(file);\n  };\n\n  const processCsv = (str, delim = \",\") => {\n    setSelectedHeaders(str.slice(0, str.indexOf('\\r\\n')).split(delim));\n    setIsHeaderPicked(true);\n    console.log(selectedHeaders);\n  };\n\n  const saveChosenVariables = e => {\n    if (chosenVariables.indexOf(e) === -1) {\n      chosenVariables.push(e);\n      console.log(chosenVariables);\n    } else if (chosenVariables.indexOf(e) !== -1) {\n      chosenVariables.splice(chosenVariables.indexOf(e), 1);\n      console.log(chosenVariables);\n    }\n  }; //Date.now() + '-' + file.originalname\n  //putting csvfile name in database\n\n\n  const handleDatabase = () => {\n    console.log(\"handleDB started\");\n    let csvName = d.getDate() + '-' + (d.getMonth() + 1) + '-' + selectedFile.name;\n    axios.post(\"http://localhost:3001/list\", {\n      csvname: csvName,\n      graph: chosenGraph,\n      var1: chosenVariables[0],\n      var2: chosenVariables[1],\n      var3: chosenVariables[2],\n      var4: chosenVariables[3],\n      var5: chosenVariables[4]\n    }).then(res => {\n      console.log(res.statusText);\n    }); // fetch(\"http://localhost:3001/list\", {\n    // \tmethod: 'POST',\n    // \theaders: {\n    // \t\t'Content-Type' : 'application/json',\n    // \t},\n    // \tbody: JSON.stringify({csvName}),\n    // }).catch(error => {\n    // \tconsole.log(error);\n    // })\n    // .then(response => {\n    // \tconsole.log(response);\n    // \treturn response.text();\n    // });\n\n    function getSteps() {\n      return ['Upload CSV', 'Choose variables', 'Choose a graphicon'];\n    }\n\n    function getStepContent(stepIndex) {\n      switch (stepIndex) {\n        case 0:\n          return /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            accept: \".csv\",\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this);\n\n        case 1:\n          return 'What is an ad group anyways?';\n\n        case 2:\n          return 'This is the bit I really care about!';\n\n        default:\n          return 'Unknown stepIndex';\n      }\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    //logic htmnl\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => setModalShow(true),\n        children: \"Launch vertically centered modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n        show: modalShow,\n        onHide: () => setModalShow(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        accept: \".csv\",\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 4\n      }, this), isFilePicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Filename: \", selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Filetype: \", selectedFile.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Size in bytes: \", selectedFile.size]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"lastModifiedDate:\", ' ', selectedFile.lastModifiedDate.toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a file to show details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmission,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 4\n      }, this), isFileSubmitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Variables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 6\n          }, this), isHeaderPicked ? selectedHeaders.map((e, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              saveChosenVariables(e);\n            },\n            children: e\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 11\n          }, this)) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 14\n          }, this), console.log(chosenVariables)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Graphicons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 5\n          }, this), typesGraphicons.map((e, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              chosenGraph = e;\n              console.log(chosenGraph);\n            },\n            children: e\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 6\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: () => {\n              handleDatabase();\n            },\n            children: \"Napravi grafikon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s2(Upload, \"Cv7GWHt0VbCqOxxi+l0Q0b+Jhi0=\");\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["C:/Users/alens/OneDrive/Radna površina/Novi materijali/diplomski react node sql/client/src/components/UploadGraph/Upload.jsx"],"names":["React","useState","axios","Modal","Button","Stepper","Step","StepLabel","makeStyles","Typography","useStyles","theme","root","width","backButton","marginRight","spacing","instructions","marginTop","marginBottom","Upload","activeStep","setActiveStep","steps","getSteps","handleNext","prevActiveStep","handleBack","handleReset","MyVerticallyCenteredModal","props","classes","map","label","length","getStepContent","onHide","modalShow","setModalShow","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","isFileSubmitted","setIsFileSubmitted","selectedHeaders","setSelectedHeaders","isHeaderPicked","setIsHeaderPicked","d","Date","chosenVariables","typesGraphicons","chosenGraph","changeHandler","event","target","files","console","log","handleSubmission","data","FormData","append","post","then","res","statusText","submit","file","reader","FileReader","onload","e","text","result","processCsv","readAsText","str","delim","slice","indexOf","split","saveChosenVariables","push","splice","handleDatabase","csvName","getDate","getMonth","name","csvname","graph","var1","var2","var3","var4","var5","stepIndex","type","size","lastModifiedDate","toLocaleDateString","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button  from 'react-bootstrap/Button';\r\n//stepper\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t  width: '100%',\r\n\t},\r\n\tbackButton: {\r\n\t  marginRight: theme.spacing(1),\r\n\t},\r\n\tinstructions: {\r\n\t  marginTop: theme.spacing(1),\r\n\t  marginBottom: theme.spacing(1),\r\n\t},\r\n  }));\r\n\r\n\r\n\r\n//\"react-bootstrap\": \"^2.0.0-beta.4\",\r\n \r\n\r\n\r\n\r\n//logic\r\nconst Upload = () => {\r\n\t\r\n\tconst [activeStep, setActiveStep] = React.useState(0);\r\n\tconst steps = getSteps();\r\n  \r\n\tconst handleNext = () => {\r\n\t  setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n\t};\r\n  \r\n\tconst handleBack = () => {\r\n\t  setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\t};\r\n  \r\n\tconst handleReset = () => {\r\n\t  setActiveStep(0);\r\n\t};\r\n\r\n\t\r\nfunction MyVerticallyCenteredModal(props){\r\n\tconst classes = useStyles();\r\n\treturn(\r\n\t\t<Modal\t\r\n\t\t\t{...props}\r\n\t\t\tsize=\"lg\"\r\n\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\tcentered\r\n\t\t>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">\r\n\t\t\t\t\tModal heading\r\n\t\t\t\t</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t\r\n\t\t\t\t{/* stepper */}\r\n\t\t\t\t<div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>All steps completed</Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\r\n\r\n\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button onClick={props.onHide}>Close</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal>\r\n\r\n\t);\r\n}\r\n\t\r\n\t  //end of steppper\r\n\tconst [ modalShow, setModalShow ] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [isFilePicked, setIsFilePicked] = useState(false);\r\n\tconst [isFileSubmitted, setIsFileSubmitted] = useState(false);\r\n\tconst [selectedHeaders, setSelectedHeaders] = useState();\r\n\tconst [isHeaderPicked, setIsHeaderPicked] = useState(false);\r\n\tconst d = new Date();\r\n\tlet chosenVariables = [];\r\n\tlet typesGraphicons = ['Linijski grafikon', 'Histogram','Box plot','Scatter plot', 'Bar plot', 'Heat map'];\r\n\tlet chosenGraph = -1;\r\n\t\r\n\r\n\t\r\n   \r\n    const changeHandler = (event) => {\r\n\t\tsetSelectedFile(event.target.files[0]);\r\n\t\tconsole.log(event.target.files[0]);\r\n\t\tsetIsFilePicked(true);\r\n\t};\r\n    //uploading csv to server\r\n    const handleSubmission = () => {\r\n\t\tconsole.log(\"handleUpload started\");\r\n        const data = new FormData()\r\n        data.append('file', selectedFile)\r\n        axios.post(\"http://localhost:3001/upload\", data, {\r\n\r\n        })\r\n        .then(res => {\r\n            console.log(res.statusText);\r\n        })\r\n\t\t\r\n\t\tsubmit();\r\n\t\tsetIsFileSubmitted(true);\r\n\t};\r\n\t\r\n\r\n\r\n\r\n\t//getHeaders from selectedfile csv\r\n\tconst submit = () => {\r\n        const file = selectedFile;\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = function(e) {\r\n            const text = e.target.result;\r\n            console.log(text);\r\n\t\t\tprocessCsv(text);\r\n        }\r\n\r\n        reader.readAsText(file);\r\n    }\r\n\t\r\n\tconst processCsv = (str, delim=\",\") => {\r\n\t\tsetSelectedHeaders(  str.slice(0,str.indexOf('\\r\\n')).split(delim));\r\n\t\tsetIsHeaderPicked(true);\r\n\t\tconsole.log(selectedHeaders);\r\n\t\t\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\r\n\tconst saveChosenVariables = (e) => {\r\n\t\tif(chosenVariables.indexOf(e) === -1){\r\n\t\t\tchosenVariables.push(e);\r\n\t\t\tconsole.log(chosenVariables);\r\n\t\t}\r\n\t\telse if(chosenVariables.indexOf(e) !== -1){\r\n\t\t\tchosenVariables.splice(chosenVariables.indexOf(e),1);\r\n\t\t\tconsole.log(chosenVariables);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\t//Date.now() + '-' + file.originalname\r\n\t//putting csvfile name in database\r\n\tconst handleDatabase = ()=> {\r\n\t\tconsole.log(\"handleDB started\");\r\n\t\tlet csvName = d.getDate() + '-' + (d.getMonth()+1) + '-' + selectedFile.name;\r\n\t\t\r\n\t\taxios.post(\"http://localhost:3001/list\",{\r\n\t\t\tcsvname: csvName,\r\n\t\t\tgraph: chosenGraph,\r\n\t\t\tvar1: chosenVariables[0],\r\n\t\t\tvar2: chosenVariables[1],\r\n\t\t\tvar3: chosenVariables[2],\r\n\t\t\tvar4: chosenVariables[3],\r\n\t\t\tvar5: chosenVariables[4],\r\n\t\t})\r\n\t\t.then(res => {\r\n            console.log(res.statusText);\r\n        })\r\n\r\n\t\t\r\n\t\r\n\t\t// fetch(\"http://localhost:3001/list\", {\r\n\t\t// \tmethod: 'POST',\r\n\t\t// \theaders: {\r\n\t\t// \t\t'Content-Type' : 'application/json',\r\n\t\t// \t},\r\n\t\t// \tbody: JSON.stringify({csvName}),\r\n\t\t// }).catch(error => {\r\n\t\t// \tconsole.log(error);\r\n\t\t// })\r\n\t\t// .then(response => {\r\n\t\t// \tconsole.log(response);\r\n\t\t// \treturn response.text();\r\n\t\t// });\r\n\r\n\t\tfunction getSteps() {\r\n\t\t\treturn ['Upload CSV', 'Choose variables', 'Choose a graphicon'];\r\n\t\t}\r\n\t\t\r\n\t\tfunction getStepContent(stepIndex) {\r\n\t\t\tswitch (stepIndex) {\r\n\t\t\t  case 0:\r\n\t\t\t\treturn (<input type=\"file\" name=\"file\" accept=\".csv\" onChange={changeHandler} />\r\n\t\t\t\t\t\r\n\t\t\t\t\t);\r\n\t\t\t  case 1:\r\n\t\t\t\treturn 'What is an ad group anyways?';\r\n\t\t\t  case 2:\r\n\t\t\t\treturn 'This is the bit I really care about!';\r\n\t\t\t  default:\r\n\t\t\t\treturn 'Unknown stepIndex';\r\n\t\t\t}\r\n\t\t  }\r\n\t\t\r\n\t};\r\n\r\n    return (\r\n\t\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t//logic htmnl\r\n        <div>\r\n\t\t\t<Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n\t\t\t\tLaunch vertically centered modal\r\n\t\t\t</Button>\r\n\r\n\t\t\t<MyVerticallyCenteredModal\r\n\t\t\t\tshow={modalShow}\r\n\t\t\t\tonHide={() => setModalShow(false)}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\t<input type=\"file\" name=\"file\" accept=\".csv\" onChange={changeHandler} />\r\n\t\t\t{isFilePicked ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>Filename: {selectedFile.name}</p>\r\n\t\t\t\t\t<p>Filetype: {selectedFile.type}</p>\r\n\t\t\t\t\t<p>Size in bytes: {selectedFile.size}</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tlastModifiedDate:{' '}\r\n\t\t\t\t\t\t{selectedFile.lastModifiedDate.toLocaleDateString()}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<p>Select a file to show details</p>\r\n\t\t\t)}\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={ handleSubmission } >Submit</button>\r\n\t\t\t</div>\r\n\t\t\t{isFileSubmitted ? (\r\n\t\t\t\t<>\r\n\t\t\t\t<div> \r\n\t\t\t\t\t<label>Variables</label>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisHeaderPicked ? (\r\n\t\t\t\t\t\t\t\tselectedHeaders.map((e,i) => (\r\n\t\t\t\t\t\t\t\t\t\t<button key={i} type=\"button\" onClick={()=> {saveChosenVariables(e) }}>{e}</button>))\r\n\t\t\t\t\t\t\t) : ( <br/>) \r\n\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{console.log(chosenVariables)}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t<label>Graphicons</label>\r\n\t\t\t\t{typesGraphicons.map((e,i) => (\r\n\t\t\t\t\t<button key={i} type=\"button\" onClick={() => {chosenGraph = e; console.log(chosenGraph);}}>{e}</button>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type=\"submit\" onClick={()=>{handleDatabase()}}>Napravi grafikon</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t\t\r\n\t\t\t) : ( <br/>) }\r\n\t\t\t\r\n\t\t\t\r\n\t\t</div>\r\n\t\t\r\n    )\r\n}\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}