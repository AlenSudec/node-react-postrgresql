{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alens\\\\OneDrive\\\\Radna povr\\u0161ina\\\\Novi materijali\\\\diplomski react node sql\\\\client\\\\src\\\\components\\\\UploadGraph\\\\Upload.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport './mystyle.css';\nimport LineGraph from './pictures/linegraph.png'; //stepper\n//\"react-bootstrap\": \"^2.0.0-beta.4\",\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MyBody(props) {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState();\n  const [isFilePicked, setIsFilePicked] = useState(false);\n  const [isFileSubmitted, setIsFileSubmitted] = useState(false);\n  const [selectedHeaders, setSelectedHeaders] = useState();\n  const [isHeaderPicked, setIsHeaderPicked] = useState(false);\n  const [isGraphDone, setIsGraphDone] = useState(false);\n  const [isInput, setIsInput] = useState(true);\n  const [LinkOfGraph, setLinkOfGraph] = useState('http://localhost:3001/graph');\n  const [iFrameLink, setIframeLink] = useState(false);\n  const d = new Date();\n  let chosenVariables = [];\n  let typesGraphicons = ['Linijski grafikon', 'Histogram', 'Box plot', 'Scatter plot', 'Bar plot', 'Heat map'];\n  let chosenGraph = -1;\n  let lastId = \"\";\n\n  const changeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n    console.log(event.target.files[0]);\n    setIsFilePicked(true);\n  }; //uploading csv to server\n\n\n  const handleSubmission = () => {\n    console.log(\"handleUpload started\");\n    const data = new FormData();\n    data.append('file', selectedFile);\n    axios.post(\"http://localhost:3001/upload\", data, {}).then(res => {\n      console.log(res.statusText);\n    });\n    submit();\n    setIsFileSubmitted(true);\n  }; //getHeaders from selectedfile csv\n\n\n  const submit = () => {\n    const file = selectedFile;\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const text = e.target.result;\n      console.log(text);\n      processCsv(text);\n    };\n\n    reader.readAsText(file);\n  };\n\n  const processCsv = (str, delim = \",\") => {\n    setSelectedHeaders(str.slice(0, str.indexOf('\\r\\n')).split(delim));\n    setIsHeaderPicked(true);\n    console.log(selectedHeaders);\n  };\n\n  const saveChosenVariables = e => {\n    if (chosenVariables.indexOf(e) === -1) {\n      chosenVariables.push(e);\n      console.log(chosenVariables);\n    } else if (chosenVariables.indexOf(e) !== -1) {\n      chosenVariables.splice(chosenVariables.indexOf(e), 1);\n      console.log(chosenVariables);\n    }\n  }; //Date.now() + '-' + file.originalname\n  //putting csvfile name in database\n\n\n  const handleDatabase = () => {\n    console.log(\"handleDB started\");\n    let csvName = d.getDate() + '-' + (d.getMonth() + 1) + '-' + selectedFile.name;\n    axios.post(\"http://localhost:3001/list\", {\n      csvname: csvName,\n      graph: chosenGraph,\n      var1: chosenVariables[0],\n      var2: chosenVariables[1],\n      var3: chosenVariables[2],\n      var4: chosenVariables[3],\n      var5: chosenVariables[4]\n    }).then(res => {\n      console.log(res.statusText);\n      console.log(res);\n      console.log(\"1\");\n\n      function sendId() {\n        return new Promise(resolve => {\n          lastId = res.data.rows[0].id;\n          console.log(lastId);\n          setLinkOfGraph(LinkOfGraph + lastId);\n          console.log(typeof LinkOfGraph);\n          console.log(LinkOfGraph);\n          console.log(res.data.rows[0].id);\n          console.log(\"2\");\n          resolve(LinkOfGraph);\n        });\n      }\n\n      async function sent() {\n        await sendId();\n        setIsFileSubmitted(false);\n        setIsFilePicked(false);\n        console.log(isInput);\n        setIsInput(false);\n        console.log(isInput);\n        console.log(\"3\");\n        setIsGraphDone(true);\n        console.log(\"graph done\");\n      }\n\n      sent();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isInput ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      className: \"btn btn-danger\",\n      accept: \".csv\",\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), isFilePicked && isInput ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Filename: \", selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Filetype: \", selectedFile.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Size in bytes: \", selectedFile.size]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"lastModifiedDate:\", ' ', selectedFile.lastModifiedDate.toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: handleSubmission,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), isFileSubmitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Variables:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 6\n        }, this), isHeaderPicked ? selectedHeaders.map((e, i) => /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          className: \"button-spacing\",\n          onClick: () => {\n            saveChosenVariables(e);\n          },\n          children: e\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), console.log(chosenVariables)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Graphicons:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 6\n        }, this), typesGraphicons.map((e, i) => /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          className: \"button-spacing\",\n          onClick: () => {\n            chosenGraph = e;\n            console.log(chosenGraph);\n          },\n          children: e\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          type: \"submit\",\n          onClick: () => {\n            handleDatabase();\n          },\n          children: \"Napravi grafikon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), isGraphDone ?\n    /*#__PURE__*/\n    // 8 korak\n    _jsxDEV(_Fragment, {\n      children: [console.log(LinkOfGraph), console.log(\"4\"), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: LinkOfGraph,\n        title: \"graph\",\n        allowFullScreen: true,\n        height: \"450\",\n        width: \"800\\r \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 5\n      }, this), console.log(\"5\"), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => {\n            setIframeLink(true);\n          },\n          children: \"Create iframe adress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 5\n      }, this), iFrameLink ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"div-link\",\n            children: LinkOfGraph\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 7\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \" \"\n      }, void 0, false)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 10\n  }, this);\n} //logic\n\n\n_s(MyBody, \"qdO8TIWFMF9eT4fbzg2EGOXzI/E=\");\n\n_c = MyBody;\n\nconst Upload = () => {\n  _s2();\n\n  //1 korak\n  function MyVerticallyCenteredModal(props) {\n    return (\n      /*#__PURE__*/\n      // 3 korak\n      _jsxDEV(Modal, { ...props,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"d3.js grafikon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(MyBody, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 4\n      }, this)\n    );\n  } //end of steppper\n\n\n  const [modalShow, setModalShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid bg-grey\",\n    id: \"stvoriGraf\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Create your graphicon here:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => setModalShow(true),\n            children: \"Create graphicon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n            show: modalShow,\n            onHide: () => setModalShow(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: LineGraph,\n          width: \"100\",\n          height: \"100\",\n          alt: \"linegraph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 69\n        }, this), \"picture2\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 14\n        }, this), \"picture3\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-2\",\n        children: [\"picture4\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 14\n        }, this), \"picture5\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 14\n        }, this), \"picture6\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(Upload, \"xuPPltV/3J92+XaNotdpXxySp+I=\");\n\n_c2 = Upload;\nexport default Upload;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyBody\");\n$RefreshReg$(_c2, \"Upload\");","map":{"version":3,"sources":["C:/Users/alens/OneDrive/Radna površina/Novi materijali/diplomski react node sql/client/src/components/UploadGraph/Upload.jsx"],"names":["React","useState","axios","Modal","Button","LineGraph","MyBody","props","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","isFileSubmitted","setIsFileSubmitted","selectedHeaders","setSelectedHeaders","isHeaderPicked","setIsHeaderPicked","isGraphDone","setIsGraphDone","isInput","setIsInput","LinkOfGraph","setLinkOfGraph","iFrameLink","setIframeLink","d","Date","chosenVariables","typesGraphicons","chosenGraph","lastId","changeHandler","event","target","files","console","log","handleSubmission","data","FormData","append","post","then","res","statusText","submit","file","reader","FileReader","onload","e","text","result","processCsv","readAsText","str","delim","slice","indexOf","split","saveChosenVariables","push","splice","handleDatabase","csvName","getDate","getMonth","name","csvname","graph","var1","var2","var3","var4","var5","sendId","Promise","resolve","rows","id","sent","type","size","lastModifiedDate","toLocaleDateString","map","i","Upload","MyVerticallyCenteredModal","onHide","modalShow","setModalShow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './mystyle.css'; \r\n\r\nimport LineGraph from './pictures/linegraph.png';\r\n\r\n//stepper\r\n\r\n\r\n\r\n\r\n\r\n//\"react-bootstrap\": \"^2.0.0-beta.4\",\r\n\r\nfunction MyBody(props) {\r\n\tconst [selectedFile, setSelectedFile] = useState();\r\n\tconst [isFilePicked, setIsFilePicked] = useState(false);\r\n\tconst [isFileSubmitted, setIsFileSubmitted] = useState(false);\r\n\tconst [selectedHeaders, setSelectedHeaders] = useState();\r\n\tconst [isHeaderPicked, setIsHeaderPicked] = useState(false);\r\n\tconst [isGraphDone, setIsGraphDone] = useState(false);\r\n\tconst [isInput, setIsInput] = useState(true);\r\n\tconst [LinkOfGraph, setLinkOfGraph] = useState('http://localhost:3001/graph');\r\n\tconst [iFrameLink, setIframeLink] = useState(false);\r\n\r\n\tconst d = new Date();\r\n\tlet chosenVariables = [];\r\n\tlet typesGraphicons = ['Linijski grafikon', 'Histogram', 'Box plot', 'Scatter plot', 'Bar plot', 'Heat map'];\r\n\tlet chosenGraph = -1;\r\n\tlet lastId = \"\";\r\n\r\n\r\n\r\n\r\n\r\n\tconst changeHandler = (event) => {\r\n\t\tsetSelectedFile(event.target.files[0]);\r\n\t\tconsole.log(event.target.files[0]);\r\n\t\tsetIsFilePicked(true);\r\n\t};\r\n\t//uploading csv to server\r\n\tconst handleSubmission = () => {\r\n\t\tconsole.log(\"handleUpload started\");\r\n\t\tconst data = new FormData()\r\n\t\tdata.append('file', selectedFile)\r\n\t\taxios.post(\"http://localhost:3001/upload\", data, {\r\n\r\n\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log(res.statusText);\r\n\t\t\t})\r\n\r\n\t\tsubmit();\r\n\t\tsetIsFileSubmitted(true);\r\n\t};\r\n\r\n\r\n\r\n\r\n\t//getHeaders from selectedfile csv\r\n\tconst submit = () => {\r\n\t\tconst file = selectedFile;\r\n\t\tconst reader = new FileReader();\r\n\r\n\t\treader.onload = function (e) {\r\n\t\t\tconst text = e.target.result;\r\n\t\t\tconsole.log(text);\r\n\t\t\tprocessCsv(text);\r\n\t\t}\r\n\r\n\t\treader.readAsText(file);\r\n\t}\r\n\r\n\tconst processCsv = (str, delim = \",\") => {\r\n\t\tsetSelectedHeaders(str.slice(0, str.indexOf('\\r\\n')).split(delim));\r\n\t\tsetIsHeaderPicked(true);\r\n\t\tconsole.log(selectedHeaders);\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tconst saveChosenVariables = (e) => {\r\n\t\tif (chosenVariables.indexOf(e) === -1) {\r\n\t\t\tchosenVariables.push(e);\r\n\t\t\tconsole.log(chosenVariables);\r\n\t\t}\r\n\t\telse if (chosenVariables.indexOf(e) !== -1) {\r\n\t\t\tchosenVariables.splice(chosenVariables.indexOf(e), 1);\r\n\t\t\tconsole.log(chosenVariables);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\t//Date.now() + '-' + file.originalname\r\n\t//putting csvfile name in database\r\n\tconst handleDatabase = () => {\r\n\t\tconsole.log(\"handleDB started\");\r\n\t\tlet csvName = d.getDate() + '-' + (d.getMonth() + 1) + '-' + selectedFile.name;\r\n\r\n\t\taxios.post(\"http://localhost:3001/list\", {\r\n\r\n\t\t\tcsvname: csvName,\r\n\t\t\tgraph: chosenGraph,\r\n\t\t\tvar1: chosenVariables[0],\r\n\t\t\tvar2: chosenVariables[1],\r\n\t\t\tvar3: chosenVariables[2],\r\n\t\t\tvar4: chosenVariables[3],\r\n\t\t\tvar5: chosenVariables[4],\r\n\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log(res.statusText);\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tconsole.log(\"1\");\r\n\t\t\t\tfunction sendId() {\r\n\t\t\t\t\treturn new Promise(resolve => {\r\n\t\t\t\t\t\tlastId = res.data.rows[0].id;\r\n\t\t\t\t\t\tconsole.log(lastId);\r\n\t\t\t\t\t\tsetLinkOfGraph(LinkOfGraph + lastId);\r\n\t\t\t\t\t\tconsole.log(typeof LinkOfGraph);\r\n\t\t\t\t\t\tconsole.log(LinkOfGraph);\r\n\t\t\t\t\t\tconsole.log(res.data.rows[0].id);\r\n\t\t\t\t\t\tconsole.log(\"2\");\r\n\t\t\t\t\t\tresolve(LinkOfGraph);\r\n\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tasync function sent() {\r\n\t\t\t\t\tawait sendId();\r\n\t\t\t\t\tsetIsFileSubmitted(false);\r\n\t\t\t\t\tsetIsFilePicked(false);\r\n\t\t\t\t\tconsole.log(isInput);\r\n\t\t\t\t\tsetIsInput(false);\r\n\t\t\t\t\tconsole.log(isInput);\r\n\r\n\t\t\t\t\tconsole.log(\"3\");\r\n\t\t\t\t\tsetIsGraphDone(true);\r\n\r\n\t\t\t\t\tconsole.log(\"graph done\");\r\n\t\t\t\t}\r\n\t\t\t\tsent();\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t})\r\n\r\n\r\n\r\n\r\n\t}\r\n\treturn (<div>\r\n\t\t{isInput ? (<input type=\"file\" name=\"file\" className=\"btn btn-danger\" accept=\".csv\" onChange={changeHandler} />) : (<></>)}\r\n\t\t{/* 4 korak */}\r\n\t\t{(isFilePicked && isInput) ? (\r\n\t\t\t<>\r\n\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<p>Filename: {selectedFile.name}</p>\r\n\t\t\t\t<p>Filetype: {selectedFile.type}</p>\r\n\t\t\t\t<p>Size in bytes: {selectedFile.size}</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tlastModifiedDate:{' '}\r\n\t\t\t\t\t{selectedFile.lastModifiedDate.toLocaleDateString()}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button variant=\"danger\" onClick={handleSubmission} >Submit</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<br/>\r\n\t\t\t</>\r\n\r\n\t\t) : (\r\n\t\t\t<></>)\r\n\t\t}\r\n\r\n\t\t{isFileSubmitted ? (\r\n\t\t\t<>\r\n\t\t\t\t{/* 6 korak */}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label>Variables:  </label>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tisHeaderPicked ? (\r\n\t\t\t\t\t\t\tselectedHeaders.map((e, i) => (\r\n\t\t\t\t\t\t\t\t<Button variant=\"danger\" className=\"button-spacing\" key={i} onClick={() => { saveChosenVariables(e) }}>{e}</Button>))\r\n\t\t\t\t\t\t) : (<></>)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{console.log(chosenVariables)}\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label>Graphicons:  </label>\r\n\t\t\t\t\t{/* 7 korak */}\r\n\t\t\t\t\t{typesGraphicons.map((e, i) => (\r\n\t\t\t\t\t\t<Button key={i} variant=\"danger\" className=\"button-spacing\" onClick={() => { chosenGraph = e; console.log(chosenGraph); }}>{e}</Button>\r\n\t\t\t\t\t))}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button variant=\"danger\" type=\"submit\" onClick={() => { handleDatabase() }}>Napravi grafikon</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\r\n\t\t) : (<></>)}\r\n\r\n\t\t{isGraphDone ? (\r\n\t\t\t// 8 korak\r\n\t\t\t<>\r\n\r\n\t\t\t\t{console.log(LinkOfGraph)}\r\n\r\n\t\t\t\t{console.log(\"4\")}\r\n\r\n\t\t\t\t<iframe src={LinkOfGraph} title=\"graph\" allowFullScreen={true} height=\"450\" width=\"800\r\n\t\t\t\t\t \"></iframe>\r\n\t\t\t\t{console.log(\"5\")}\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t<Button variant=\"danger\" onClick={()=>{setIframeLink(true)}}>Create iframe adress</Button></div>\r\n\t\t\t\t{iFrameLink ? (\r\n\t\t\t\t\t <>\t\r\n\t\t\t\t\t{/* //className=\"text-center\" */}\r\n\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<div className=\"div-link\">{LinkOfGraph}</div></div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (<> </>)}\r\n\t\t\t</>\r\n\t\t) : (<></>)}\r\n\r\n\t</div>\r\n\r\n\r\n\t);\r\n}\r\n\r\n\r\n//logic\r\nconst Upload = () => {\r\n\r\n\r\n\t//1 korak\r\n\r\n\r\n\tfunction MyVerticallyCenteredModal(props) {\r\n\r\n\t\treturn (\r\n\t\t\t// 3 korak\r\n\t\t\t<Modal\r\n\t\t\t\t{...props}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\tcentered\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">\r\n\t\t\t\t\t\td3.js grafikon\r\n\t\t\t\t\t</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\r\n\r\n\t\t\t\t\t<MyBody />\r\n\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Button variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n\t\t);\r\n\t}\r\n\r\n\t//end of steppper\r\n\tconst [modalShow, setModalShow] = useState(false);\r\n\r\n\treturn (\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t<div className=\"container-fluid bg-grey\" id=\"stvoriGraf\">\r\n\t\t\t<br/>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-sm-8\">\r\n\t\t\t\t\t<label>Create your graphicon here:</label>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button variant=\"danger\" onClick={() => setModalShow(true)}>\r\n\t\t\t\t\t\t\tCreate graphicon\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/* 2 korak */}\r\n\r\n\t\t\t\t\t\t<MyVerticallyCenteredModal\r\n\t\t\t\t\t\t\tshow={modalShow}\r\n\t\t\t\t\t\t\tonHide={() => setModalShow(false)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t<img src={LineGraph} width=\"100\" height=\"100\" alt=\"linegraph\"/><br/>\r\n\t\t\t\t\tpicture2<br/>\r\n\t\t\t\t\tpicture3<br/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\tpicture4<br/>\r\n\t\t\t\t\tpicture5<br/>\r\n\t\t\t\t\tpicture6<br/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t)\r\n};\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}