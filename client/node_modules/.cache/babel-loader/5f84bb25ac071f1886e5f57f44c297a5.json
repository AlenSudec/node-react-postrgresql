{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alens\\\\OneDrive\\\\Radna povr\\u0161ina\\\\Novi materijali\\\\diplomski react node sql\\\\client\\\\src\\\\components\\\\UploadGraph\\\\Upload.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { linkRadial } from 'd3'; //stepper\n//\"react-bootstrap\": \"^2.0.0-beta.4\",\n//logic\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Upload = () => {\n  _s();\n\n  let lastId = \"\";\n  const [LinkOfGraph, setLinkOfGraph] = useState('http://localhost:3001/graph'); //1 korak\n\n  function MyVerticallyCenteredModal(props) {\n    return (\n      /*#__PURE__*/\n      // 3 korak\n      _jsxDEV(Modal, { ...props,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Modal heading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [isInput ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            accept: \".csv\",\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 16\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), isFilePicked && isInput ?\n          /*#__PURE__*/\n          // 5 korak\n          _jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Filename: \", selectedFile.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Filetype: \", selectedFile.type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Size in bytes: \", selectedFile.size]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"lastModifiedDate:\", ' ', selectedFile.lastModifiedDate.toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSubmission,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 5\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), isFileSubmitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Variables\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 6\n              }, this), isHeaderPicked ? selectedHeaders.map((e, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  saveChosenVariables(e);\n                },\n                children: e\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 11\n              }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), console.log(chosenVariables)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Graphicons\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 5\n              }, this), typesGraphicons.map((e, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  chosenGraph = e;\n                  console.log(chosenGraph);\n                },\n                children: e\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 6\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                onClick: () => {\n                  handleDatabase();\n                },\n                children: \"Napravi grafikon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 6\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), isGraphDone ?\n          /*#__PURE__*/\n          // 8 korak\n          _jsxDEV(_Fragment, {\n            children: [console.log(LinkOfGraph), console.log(\"4\"), /*#__PURE__*/_jsxDEV(\"iframe\", {\n              src: LinkOfGraph,\n              title: \"graph\",\n              allowFullScreen: true,\n              height: \"510\",\n              width: \"800\\r \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 6\n            }, this), console.log(\"5\")]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 3\n      }, this)\n    );\n  } //end of steppper\n\n\n  const [modalShow, setModalShow] = useState(false);\n  const [selectedFile, setSelectedFile] = useState();\n  const [isFilePicked, setIsFilePicked] = useState(false);\n  const [isFileSubmitted, setIsFileSubmitted] = useState(false);\n  const [selectedHeaders, setSelectedHeaders] = useState();\n  const [isHeaderPicked, setIsHeaderPicked] = useState(false);\n  const [isGraphDone, setIsGraphDone] = useState(false);\n  const [isInput, setIsInput] = useState(true);\n  const d = new Date();\n  let chosenVariables = [];\n  let typesGraphicons = ['Linijski grafikon', 'Histogram', 'Box plot', 'Scatter plot', 'Bar plot', 'Heat map'];\n  let chosenGraph = -1;\n\n  const changeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n    console.log(event.target.files[0]);\n    setIsFilePicked(true);\n  }; //uploading csv to server\n\n\n  const handleSubmission = () => {\n    console.log(\"handleUpload started\");\n    const data = new FormData();\n    data.append('file', selectedFile);\n    axios.post(\"http://localhost:3001/upload\", data, {}).then(res => {\n      console.log(res.statusText);\n    });\n    submit();\n    setIsFileSubmitted(true);\n  }; //getHeaders from selectedfile csv\n\n\n  const submit = () => {\n    const file = selectedFile;\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const text = e.target.result;\n      console.log(text);\n      processCsv(text);\n    };\n\n    reader.readAsText(file);\n  };\n\n  const processCsv = (str, delim = \",\") => {\n    setSelectedHeaders(str.slice(0, str.indexOf('\\r\\n')).split(delim));\n    setIsHeaderPicked(true);\n    console.log(selectedHeaders);\n  };\n\n  const saveChosenVariables = e => {\n    if (chosenVariables.indexOf(e) === -1) {\n      chosenVariables.push(e);\n      console.log(chosenVariables);\n    } else if (chosenVariables.indexOf(e) !== -1) {\n      chosenVariables.splice(chosenVariables.indexOf(e), 1);\n      console.log(chosenVariables);\n    }\n  }; //Date.now() + '-' + file.originalname\n  //putting csvfile name in database\n\n\n  const handleDatabase = () => {\n    console.log(\"handleDB started\");\n    let csvName = d.getDate() + '-' + (d.getMonth() + 1) + '-' + selectedFile.name;\n    axios.post(\"http://localhost:3001/list\", {\n      csvname: csvName,\n      graph: chosenGraph,\n      var1: chosenVariables[0],\n      var2: chosenVariables[1],\n      var3: chosenVariables[2],\n      var4: chosenVariables[3],\n      var5: chosenVariables[4]\n    }).then(res => {\n      console.log(res.statusText);\n      console.log(res);\n      console.log(\"1\");\n\n      function sendId() {\n        return new Promise(resolve => {\n          lastId = res.data.rows[0].id;\n          console.log(lastId);\n          setLinkOfGraph(LinkOfGraph + lastId);\n          console.log(typeof LinkOfGraph);\n          console.log(LinkOfGraph);\n          console.log(res.data.rows[0].id);\n          console.log(\"2\");\n          resolve(LinkOfGraph);\n        });\n      }\n\n      async function sent() {\n        await sendId();\n        setIsFileSubmitted(false);\n        setIsFilePicked(false);\n        console.log(isInput);\n        setIsInput(false);\n        console.log(isInput);\n        console.log(\"3\");\n        setIsGraphDone(true);\n        console.log(\"graph done\");\n      }\n\n      sent();\n      console.log(getLinkOfGraph);\n    }); // fetch(\"http://localhost:3001/list\", {\n    // \tmethod: 'POST',\n    // \theaders: {\n    // \t\t'Content-Type' : 'application/json',\n    // \t},\n    // \tbody: JSON.stringify({csvName}),\n    // }).catch(error => {\n    // \tconsole.log(error);\n    // })\n    // .then(response => {\n    // \tconsole.log(response);\n    // \treturn response.text();\n    // });\n  };\n\n  return (\n    /*#__PURE__*/\n    //logic htmnl\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => setModalShow(true),\n        children: \"Launch vertically centered modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n        show: modalShow,\n        onHide: () => setModalShow(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 4\n      }, this), isInput ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        accept: \".csv\",\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 93\n      }, this), isFilePicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Filename: \", selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Filetype: \", selectedFile.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Size in bytes: \", selectedFile.size]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"lastModifiedDate:\", ' ', selectedFile.lastModifiedDate.toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a file to show details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmission,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 4\n      }, this), isFileSubmitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Variables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 6\n          }, this), isHeaderPicked ? selectedHeaders.map((e, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              saveChosenVariables(e);\n            },\n            children: e\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 11\n          }, this)) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 14\n          }, this), console.log(chosenVariables)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Graphicons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 5\n          }, this), typesGraphicons.map((e, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              chosenGraph = e;\n              console.log(chosenGraph);\n            },\n            children: e\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 6\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: () => {\n              handleDatabase();\n            },\n            children: \"Napravi grafikon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 10\n      }, this), isGraphDone ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Upload, \"yzwCsRrxyiuEudjlVKbTzbnP1/0=\");\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["C:/Users/alens/OneDrive/Radna površina/Novi materijali/diplomski react node sql/client/src/components/UploadGraph/Upload.jsx"],"names":["React","useState","axios","Modal","Button","linkRadial","Upload","lastId","LinkOfGraph","setLinkOfGraph","MyVerticallyCenteredModal","props","isInput","changeHandler","isFilePicked","selectedFile","name","type","size","lastModifiedDate","toLocaleDateString","handleSubmission","isFileSubmitted","isHeaderPicked","selectedHeaders","map","e","i","saveChosenVariables","console","log","chosenVariables","typesGraphicons","chosenGraph","handleDatabase","isGraphDone","onHide","modalShow","setModalShow","setSelectedFile","setIsFilePicked","setIsFileSubmitted","setSelectedHeaders","setIsHeaderPicked","setIsGraphDone","setIsInput","d","Date","event","target","files","data","FormData","append","post","then","res","statusText","submit","file","reader","FileReader","onload","text","result","processCsv","readAsText","str","delim","slice","indexOf","split","push","splice","csvName","getDate","getMonth","csvname","graph","var1","var2","var3","var4","var5","sendId","Promise","resolve","rows","id","sent","getLinkOfGraph"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button  from 'react-bootstrap/Button';\r\nimport { linkRadial } from 'd3';\r\n//stepper\r\n\r\n\r\n\r\n\r\n\r\n//\"react-bootstrap\": \"^2.0.0-beta.4\",\r\n \r\n\r\n\r\n\r\n//logic\r\nconst Upload = () => {\r\n\tlet lastId = \"\";\r\n\tconst [ LinkOfGraph, setLinkOfGraph ] = useState('http://localhost:3001/graph');\r\n\t//1 korak\r\n\r\n\t\r\nfunction MyVerticallyCenteredModal(props){\r\n\t\r\n\treturn(\r\n\t\t// 3 korak\r\n\t\t<Modal\t\r\n\t\t\t{...props}\r\n\t\t\tsize=\"lg\"\r\n\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\tcentered\r\n\t\t>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">\r\n\t\t\t\t\tModal heading\r\n\t\t\t\t</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t\r\n\t\t\t{isInput ? (<input type=\"file\" name=\"file\" accept=\".csv\" onChange={changeHandler} /> ) : (<></>) }\r\n\t\t\t{/* 4 korak */}\r\n\t\t\t{(isFilePicked && isInput) ? (\r\n\t\t\t\t// 5 korak\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>Filename: {selectedFile.name}</p>\r\n\t\t\t\t\t<p>Filetype: {selectedFile.type}</p>\r\n\t\t\t\t\t<p>Size in bytes: {selectedFile.size}</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tlastModifiedDate:{' '}\r\n\t\t\t\t\t\t{selectedFile.lastModifiedDate.toLocaleDateString()}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button onClick={ handleSubmission } >Submit</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t) : (\r\n\t\t\t\t<></> )\r\n\t\t\t\t} \r\n\t\t\t\r\n\t\t\t{isFileSubmitted ? (\r\n\t\t\t\t<>\r\n\t\t\t\t{/* 6 korak */}\r\n\t\t\t\t<div> \r\n\t\t\t\t\t<label>Variables</label>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisHeaderPicked ? (\r\n\t\t\t\t\t\t\t\tselectedHeaders.map((e,i) => (\r\n\t\t\t\t\t\t\t\t\t\t<button key={i} type=\"button\" onClick={()=> {saveChosenVariables(e) }}>{e}</button>))\r\n\t\t\t\t\t\t\t) : ( <></>) \r\n\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{console.log(chosenVariables)}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t<label>Graphicons</label>\r\n\t\t\t\t{/* 7 korak */}\r\n\t\t\t\t{typesGraphicons.map((e,i) => (\r\n\t\t\t\t\t<button key={i} type=\"button\" onClick={() => {chosenGraph = e; console.log(chosenGraph);}}>{e}</button>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type=\"submit\" onClick={()=>{handleDatabase()}}>Napravi grafikon</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t\t\r\n\t\t\t) : ( <></> )}\r\n\t\t\t\r\n\t\t\t{isGraphDone ? (\r\n\t\t\t\t// 8 korak\r\n\t\t\t\t<>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t{console.log(LinkOfGraph)}\r\n\t\t\t\t\t\r\n\t\t\t\t\t{console.log(\"4\")}\r\n\t\t\t\t\t\r\n\t\t\t\t <iframe src={LinkOfGraph} title=\"graph\"  allowFullScreen={true} height=\"510\" width=\"800\r\n\t\t\t\t \"></iframe>\r\n\t\t\t\t \t{console.log(\"5\")}\r\n\t\t\t\t </>\r\n\t\t\t) : (<></>)}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\r\n\r\n\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button onClick={props.onHide}>Close</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal>\r\n\r\n\t);\r\n}\r\n\t\r\n\t  //end of steppper\r\n\tconst [ modalShow, setModalShow ] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [isFilePicked, setIsFilePicked] = useState(false);\r\n\tconst [isFileSubmitted, setIsFileSubmitted] = useState(false);\r\n\tconst [selectedHeaders, setSelectedHeaders] = useState();\r\n\tconst [isHeaderPicked, setIsHeaderPicked] = useState(false);\r\n\tconst [isGraphDone, setIsGraphDone ] = useState(false);\r\n\tconst [isInput, setIsInput] = useState(true);\r\n\tconst d = new Date();\r\n\tlet chosenVariables = [];\r\n\tlet typesGraphicons = ['Linijski grafikon', 'Histogram','Box plot','Scatter plot', 'Bar plot', 'Heat map'];\r\n\tlet chosenGraph = -1;\r\n\t\r\n\t\r\n\r\n\t\r\n   \r\n    const changeHandler = (event) => {\r\n\t\tsetSelectedFile(event.target.files[0]);\r\n\t\tconsole.log(event.target.files[0]);\r\n\t\tsetIsFilePicked(true);\r\n\t};\r\n    //uploading csv to server\r\n    const handleSubmission = () => {\r\n\t\tconsole.log(\"handleUpload started\");\r\n        const data = new FormData()\r\n        data.append('file', selectedFile)\r\n        axios.post(\"http://localhost:3001/upload\", data, {\r\n\r\n        })\r\n        .then(res => {\r\n            console.log(res.statusText);\r\n        })\r\n\t\t\r\n\t\tsubmit();\r\n\t\tsetIsFileSubmitted(true);\r\n\t};\r\n\t\r\n\r\n\r\n\r\n\t//getHeaders from selectedfile csv\r\n\tconst submit = () => {\r\n        const file = selectedFile;\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = function(e) {\r\n            const text = e.target.result;\r\n            console.log(text);\r\n\t\t\tprocessCsv(text);\r\n        }\r\n\r\n        reader.readAsText(file);\r\n    }\r\n\t\r\n\tconst processCsv = (str, delim=\",\") => {\r\n\t\tsetSelectedHeaders(  str.slice(0,str.indexOf('\\r\\n')).split(delim));\r\n\t\tsetIsHeaderPicked(true);\r\n\t\tconsole.log(selectedHeaders);\r\n\t\t\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\r\n\tconst saveChosenVariables = (e) => {\r\n\t\tif(chosenVariables.indexOf(e) === -1){\r\n\t\t\tchosenVariables.push(e);\r\n\t\t\tconsole.log(chosenVariables);\r\n\t\t}\r\n\t\telse if(chosenVariables.indexOf(e) !== -1){\r\n\t\t\tchosenVariables.splice(chosenVariables.indexOf(e),1);\r\n\t\t\tconsole.log(chosenVariables);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\t//Date.now() + '-' + file.originalname\r\n\t//putting csvfile name in database\r\n\tconst handleDatabase = ()=> {\r\n\t\tconsole.log(\"handleDB started\");\r\n\t\tlet csvName = d.getDate() + '-' + (d.getMonth()+1) + '-' + selectedFile.name;\r\n\t\t\r\n\t\taxios.post(\"http://localhost:3001/list\",{\r\n\t\t\t\r\n\t\t\tcsvname: csvName,\r\n\t\t\tgraph: chosenGraph,\r\n\t\t\tvar1: chosenVariables[0],\r\n\t\t\tvar2: chosenVariables[1],\r\n\t\t\tvar3: chosenVariables[2],\r\n\t\t\tvar4: chosenVariables[3],\r\n\t\t\tvar5: chosenVariables[4],\r\n\t\t})\r\n\t\t.then(res => {\r\n            console.log(res.statusText);\r\n\t\t\tconsole.log(res);\r\n\t\t\tconsole.log(\"1\");\r\n\t\t\tfunction sendId(){\r\n\t\t\t\treturn new Promise(resolve=> {\r\n\t\t\t\t\tlastId = res.data.rows[0].id;\r\n\t\t\t\t\tconsole.log(lastId);\r\n\t\t\t\t\tsetLinkOfGraph(LinkOfGraph + lastId);\r\n\t\t\t\t\tconsole.log(typeof LinkOfGraph);\r\n\t\t\t\t\tconsole.log(LinkOfGraph);\r\n\t\t\t\t\tconsole.log(res.data.rows[0].id);\r\n\t\t\t\t\tconsole.log(\"2\");\r\n\t\t\t\t\tresolve(LinkOfGraph);\r\n\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tasync function sent(){\r\n\t\t\t\tawait sendId();\r\n\t\t\t\tsetIsFileSubmitted(false);\r\n\t\t\t\tsetIsFilePicked(false);\r\n\t\t\t\tconsole.log(isInput);\r\n\t\t\t\tsetIsInput(false);\r\n\t\t\t\tconsole.log(isInput);\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(\"3\");\r\n\t\t\t\tsetIsGraphDone(true);\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(\"graph done\");\r\n\t\t\t}\r\n\t\t\tsent();\r\n\t\t\tconsole.log(getLinkOfGraph);\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n        })\r\n\r\n\t\t\r\n\t\r\n\t\t// fetch(\"http://localhost:3001/list\", {\r\n\t\t// \tmethod: 'POST',\r\n\t\t// \theaders: {\r\n\t\t// \t\t'Content-Type' : 'application/json',\r\n\t\t// \t},\r\n\t\t// \tbody: JSON.stringify({csvName}),\r\n\t\t// }).catch(error => {\r\n\t\t// \tconsole.log(error);\r\n\t\t// })\r\n\t\t// .then(response => {\r\n\t\t// \tconsole.log(response);\r\n\t\t// \treturn response.text();\r\n\t\t// });\r\n\r\n\t\t\r\n\t\t\r\n\t};\r\n\r\n    return (\r\n\t\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t//logic htmnl\r\n        <div>\r\n\t\t\t<Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n\t\t\t\tLaunch vertically centered modal\r\n\t\t\t</Button> \r\n\t\t\t{/* 2 korak */}\r\n\r\n\t\t\t<MyVerticallyCenteredModal\r\n\t\t\t\tshow={modalShow}\r\n\t\t\t\tonHide={() => setModalShow(false)}\r\n\t\t\t/>\r\n\t\t\t{isInput ? (<input type=\"file\" name=\"file\" accept=\".csv\" onChange={changeHandler} />) : (<br/>)}\r\n\t\t\t\r\n\t\t\t{isFilePicked ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>Filename: {selectedFile.name}</p>\r\n\t\t\t\t\t<p>Filetype: {selectedFile.type}</p>\r\n\t\t\t\t\t<p>Size in bytes: {selectedFile.size}</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tlastModifiedDate:{' '}\r\n\t\t\t\t\t\t{selectedFile.lastModifiedDate.toLocaleDateString()}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<p>Select a file to show details</p>\r\n\t\t\t)}\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={ handleSubmission } >Submit</button>\r\n\t\t\t</div>\r\n\t\t\t{isFileSubmitted ? (\r\n\t\t\t\t<>\r\n\t\t\t\t<div> \r\n\t\t\t\t\t<label>Variables</label>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisHeaderPicked ? (\r\n\t\t\t\t\t\t\t\tselectedHeaders.map((e,i) => (\r\n\t\t\t\t\t\t\t\t\t\t<button key={i} type=\"button\" onClick={()=> {saveChosenVariables(e) }}>{e}</button>))\r\n\t\t\t\t\t\t\t) : ( <br/>) \r\n\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{console.log(chosenVariables)}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t<label>Graphicons</label>\r\n\t\t\t\t{typesGraphicons.map((e,i) => (\r\n\t\t\t\t\t<button key={i} type=\"button\" onClick={() => {chosenGraph = e; console.log(chosenGraph);}}>{e}</button>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type=\"submit\" onClick={()=>{handleDatabase()}}>Napravi grafikon</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t\t\r\n\t\t\t) : ( <br/>) }\r\n\t\t\t{isGraphDone ? (\r\n\t\t\t\t<>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t {/* <iframe id=\"showGraph\" src=\"http:localhost:3001/graph77\" title=\"graph\" allowFullScreen={true} height=\"1000\" width=\"1000\r\n            \"></iframe> */}\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t</>\r\n\t\t\t) : (<br/>)}\r\n\t\t\t\r\n\t\t\t\r\n\t\t</div>\r\n\t\t\r\n    )\r\n}\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}